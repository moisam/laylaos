diff -rub ./gnudos-mirror/config.h.in ./gnudos-mirror/config.h.in
--- ./gnudos-mirror/config.h.in	2024-09-08 20:03:49.580662479 +0100
+++ ./gnudos-mirror/config.h.in	2024-09-04 21:45:36.972219895 +0100
@@ -110,4 +110,4 @@
 #undef VERSION
 
 /* Define to rpl_malloc if the replacement function should be used. */
-#undef malloc
+//#undef malloc
diff -rub ./gnudos-mirror/src/corelib/dialogs.c ./gnudos-mirror/src/corelib/dialogs.c
--- ./gnudos-mirror/src/corelib/dialogs.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/corelib/dialogs.c	2024-09-08 21:44:49.356134525 +0100
@@ -66,13 +66,15 @@
 {
     if(!src) return NULL;
 
-    size_t slen = wcsrtombs(NULL, (const wchar_t **)&src, 0, NULL);
+    const wchar_t *wsrc = (const wchar_t *)src;
+    size_t slen = wcsrtombs(NULL, &wsrc, 0, NULL);
     char *s;
 
     if(slen == (size_t)-1) return NULL;
     if(!(s = malloc(slen+1))) return NULL;
 
-    slen = wcsrtombs(s, (const wchar_t **)&src, slen, NULL);
+    wsrc = (const wchar_t *)src;
+    slen = wcsrtombs(s, &wsrc, slen, NULL);
     s[slen] = '\0';
     if(reslen) *reslen = slen;
 
@@ -89,12 +91,15 @@
 {
     if(!src) return NULL;
 
-    size_t wclen = mbsrtowcs(NULL, (const char **)&src, 0, NULL);
+    const char *csrc = (const char *)src;
+    size_t wclen = mbsrtowcs(NULL, &csrc, 0, NULL);
     wchar_t *wcs;
 
     if(wclen == (size_t)-1) return NULL;
     if(!(wcs = malloc((wclen+1) * sizeof(wchar_t)))) return NULL;
-    wclen = mbsrtowcs(wcs, (const char **)&src, wclen, NULL);
+
+    csrc = (const char *)src;
+    wclen = mbsrtowcs(wcs, &csrc, wclen, NULL);
     wcs[wclen] = L'\0';
     if(reslen) *reslen = wclen;
 
@@ -112,13 +117,14 @@
     size_t i, wstrlen = wcslen(wstr);
     size_t clen;
     char cstr[16];
-    wchar_t *p, wctmp[2] = { L'\0', L'\0' };
+    const wchar_t *p;
+    wchar_t wctmp[2] = { L'\0', L'\0' };
 
     for(i = 0; i < wstrlen; i++)
     {
         wctmp[0] = wstr[i];
         p = wctmp;
-        clen = wcsrtombs(cstr, (const wchar_t **)&p, 1, NULL);
+        clen = wcsrtombs(cstr, &p, 1, NULL);
         cstr[clen] = '\0';
         printw("%s", cstr);
     }
@@ -148,7 +154,8 @@
 #else
     size_t clen;
     char cstr[16];
-    clen = wcsrtombs(cstr, (const wchar_t **)&wctmp, 1, NULL);
+    const wchar_t *p = wctmp;
+    clen = wcsrtombs(cstr, &p, 1, NULL);
     cstr[clen] = '\0';
     printw("%s", cstr);
 #endif
diff -rub ./gnudos-mirror/src/corelib/kbd.c ./gnudos-mirror/src/corelib/kbd.c
--- ./gnudos-mirror/src/corelib/kbd.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/corelib/kbd.c	2024-09-08 18:23:15.519565215 +0100
@@ -55,7 +55,7 @@
 int initTerminal()
 {
     // force ncurses to output unicode chars for box drawing
-    setenv("NCURSES_NO_UTF8_ACS", "1", 1);
+    setenv("NCURSES_NO_UTF8_ACS", "0", 1);
 
     initscr();              // init curses
     raw();                  // disable line buffering
@@ -132,16 +132,47 @@
         case KEY_SNEXT    : c = PGDOWN_KEY; SHIFT = 1; break;
         case KEY_SDC      : c = DEL_KEY; SHIFT = 1; break;
 
+#define TIMEOUT_GETCH(c)    \
+    timeout(10);    \
+    c = getch();    \
+    timeout(-1);
+
+#define CANCEL_AND_LEAVE(x) \
+    { ALT = 0; CTRL = 0; SHIFT = 0; c = x; }
+
         case ESC_KEY:
             // check for ALT-key
-            timeout(10);
-            c = getch();
-            timeout(-1);
+            TIMEOUT_GETCH(c);
 
             if(c == ERR) c = ESC_KEY;
             else ALT = 1;
 
             if(c == 10) c = ENTER_KEY;
+            else if(c == '[')
+            {
+                // check for long escape sequences for CTRL-arrow, ALT-arrow,
+                // and SHIFT-arrow
+                ALT = 0;
+                TIMEOUT_GETCH(c);
+                if(c != '1') CANCEL_AND_LEAVE(0);
+                TIMEOUT_GETCH(c);
+                if(c != ';') CANCEL_AND_LEAVE(0);
+                TIMEOUT_GETCH(c);
+
+                if(c == '5') CTRL = 1;
+                else if(c == '2') SHIFT = 1;
+                else if(c == '3') ALT = 1;
+                else if(c == '6') { CTRL = 1; SHIFT = 1; }
+                else CANCEL_AND_LEAVE(0);
+
+                TIMEOUT_GETCH(c);
+
+                if(c == 'D') c = LEFT_KEY;
+                else if(c == 'C') c = RIGHT_KEY;
+                else if(c == 'A') c = UP_KEY;
+                else if(c == 'B') c = DOWN_KEY;
+                else CANCEL_AND_LEAVE(0);
+            }
             break;
 
         default:
diff -rub ./gnudos-mirror/src/mino/file.c ./gnudos-mirror/src/mino/file.c
--- ./gnudos-mirror/src/mino/file.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/mino/file.c	2024-09-04 21:51:29.524698418 +0100
@@ -70,7 +70,7 @@
 
 good_to_go:
 
-    fcloseall();
+    //fcloseall();
     setScreenColors(WHITE, BGBLACK);
     clearScreen(); 
     reset_attribs();
diff -rub ./gnudos-mirror/src/mino/init.c ./gnudos-mirror/src/mino/init.c
--- ./gnudos-mirror/src/mino/init.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/mino/init.c	2024-09-04 21:07:48.965336248 +0100
@@ -34,7 +34,7 @@
 #include <stdio.h>
 #include <getopt.h>
 #include <signal.h>
-#include <asm/types.h>
+//#include <asm/types.h>
 #include "defs.h"
 #include "kbd.h"
 #include "edit.h"
diff -rub ./gnudos-mirror/src/mino/main.c ./gnudos-mirror/src/mino/main.c
--- ./gnudos-mirror/src/mino/main.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/mino/main.c	2024-09-04 21:51:08.460433847 +0100
@@ -1003,14 +1003,14 @@
     }//end while
  
     restoreTerminal();
-    fcloseall();
+    //fcloseall();
     exit(0);
  
 memerr:
 
     fprintf(stderr, "Fatal error: Insufficient memory\n");
     restoreTerminal();
-    fcloseall();
+    //fcloseall();
     exit(1);
 }//end main
 
diff -rub ./gnudos-mirror/src/prime/args.c ./gnudos-mirror/src/prime/args.c
--- ./gnudos-mirror/src/prime/args.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/prime/args.c	2024-09-04 21:52:01.625101025 +0100
@@ -23,7 +23,7 @@
 #include <stdlib.h>
 #include <unistd.h>
 #include <getopt.h>
-#include <asm/types.h>
+//#include <asm/types.h>
 #include <limits.h>
 #include <string.h>
 #include <pwd.h>
diff -rub ./gnudos-mirror/src/prime/edit.c ./gnudos-mirror/src/prime/edit.c
--- ./gnudos-mirror/src/prime/edit.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/prime/edit.c	2024-09-04 21:54:11.890728599 +0100
@@ -48,7 +48,7 @@
     return 1;
 }
 
-mode_t get_mode(__mode_t st_mode)
+mode_t get_mode(mode_t st_mode)
 {
     mode_t mode = 00;
     if(st_mode & S_IRUSR) { mode += 0400; }
diff -rub ./gnudos-mirror/src/prime/main.c ./gnudos-mirror/src/prime/main.c
--- ./gnudos-mirror/src/prime/main.c	2024-09-08 20:03:49.588662569 +0100
+++ ./gnudos-mirror/src/prime/main.c	2024-09-08 17:36:38.593777785 +0100
@@ -94,7 +94,7 @@
 void exit_gracefully(void)
 {
     write_config_file();
-    fcloseall();
+    //fcloseall();
     showCursor();
     setScreenColors(WHITE, BGDEFAULT);
     clearScreen();
